<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Blogs on ADeveloperHasNoName</title>
    <link>http://localhost:1313/blogs/</link>
    <description>Recent content in Blogs on ADeveloperHasNoName</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Oct 2024 12:31:07 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overcoming Concurrent Refresh Attempts of Access Tokens (Jwt)</title>
      <link>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</link>
      <pubDate>Wed, 09 Oct 2024 10:04:58 +0530</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background:&lt;/h2&gt;
&lt;p&gt;I was tasked with developing a web interface for an e-sports FIFA tournament service (SAFA) that had been operating primarily on Discord. They wanted to extend their services to a website, and I was responsible for making it happen.
Because the database for users was modeled around their discord account ID, the website required integrating with Discord. As Discord provides an OAuth service (&lt;a href=&#34;http://localhost:1313/content/blogs/overcoming-(discord)-api-rate-limits-with-redis-cache.md&#34;&gt;OAuth explained&lt;/a&gt;), by using JWT (learn what JWT is here) I implemented login feature through Discord OAuth (learn how to do it yourself here).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overcoming (discord) API Rate Limits With Redis Cache</title>
      <link>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</guid>
      <description>How to handle (Discord) API rate limits using a Redis-based caching mechanism in a web application.</description>
    </item>
  </channel>
</rss>
