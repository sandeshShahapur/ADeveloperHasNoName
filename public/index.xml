<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ADeveloperHasNoName</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on ADeveloperHasNoName</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2024 01:13:14 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Glossary</title>
      <link>http://localhost:1313/glossary/</link>
      <pubDate>Sat, 12 Oct 2024 20:41:18 +0530</pubDate>
      <guid>http://localhost:1313/glossary/</guid>
      <description>&lt;dl&gt;
&lt;dt&gt;Backend&lt;/dt&gt;
&lt;dd&gt;The &lt;strong&gt;server-side&lt;/strong&gt;/&lt;strong&gt;invisible-side&lt;/strong&gt; of a application that is responsible for processing requests, interacting with databases, and generating responses to be sent to the client (front-end).&lt;/dd&gt;
&lt;dt&gt;Client&lt;/dt&gt;
&lt;dd&gt;A &lt;strong&gt;device&lt;/strong&gt; or &lt;strong&gt;software&lt;/strong&gt; that accesses services or resources provided by a server. Clients can be web browsers, mobile applications, desktop applications, etc.&lt;/dd&gt;
&lt;dt&gt;Frontend&lt;/dt&gt;
&lt;dd&gt;The &lt;strong&gt;client-side&lt;/strong&gt;/&lt;strong&gt;visible-side&lt;/strong&gt; of an application that is responsible for rendering the user interface and sending requests to the server (backend) for processing.&lt;/dd&gt;
&lt;dt&gt;Protocol&lt;/dt&gt;
&lt;dd&gt;A &lt;strong&gt;set of rules and guidelines&lt;/strong&gt; that dictate how participants (whether they are devices, software components, or users) in a system should behave.&lt;/dd&gt;
&lt;dt&gt;Server&lt;/dt&gt;
&lt;dd&gt;A &lt;strong&gt;computer program&lt;/strong&gt; or a &lt;strong&gt;device&lt;/strong&gt; that provides functionality to other devices or programs, known as clients, by responding to their requests. These devices are typically dedicated to serving the needs of other programs or users, therefore being powerful machines which lack output devices like a monitor.&lt;/dd&gt;
&lt;dt&gt;Web-Server&lt;/dt&gt;
&lt;dd&gt;A &lt;strong&gt;server&lt;/strong&gt; that hosts website component files (such as HTML, CSS, JavaScript files, images, etc.) and an HTTP server that processes incoming requests from clients (web browsers) and responds with the requested resources. Web servers are accessed through the domain names of the websites they host.&lt;/dd&gt;
&lt;/dl&gt;</description>
    </item>
    <item>
      <title>What Is OAuth (2.0)? | Definition, Use Cases, and How it Works</title>
      <link>http://localhost:1313/blogs/what_is_oauth_2.0_definition_use_cases_and_how_it_works/</link>
      <pubDate>Sat, 12 Oct 2024 18:32:49 +0530</pubDate>
      <guid>http://localhost:1313/blogs/what_is_oauth_2.0_definition_use_cases_and_how_it_works/</guid>
      <description>A comprehensive guide to understanding OAuth (2.0), its definition, use cases, and how it works to grant secure access to user data.</description>
    </item>
    <item>
      <title>Overcoming Concurrent Refresh Attempts of Access Tokens (JWT)</title>
      <link>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</link>
      <pubDate>Wed, 09 Oct 2024 10:04:58 +0530</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</guid>
      <description>A deep dive into handling concurrent refresh attempts of access tokens in a single-page application using JWT, OAuth, and Redis-based locking mechanisms to enhance token management security.</description>
    </item>
    <item>
      <title>Overcoming (discord) API Rate Limits With Redis Cache</title>
      <link>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</guid>
      <description>How to handle (Discord) API rate limits using a Redis-based caching mechanism in a web application.</description>
    </item>
  </channel>
</rss>
