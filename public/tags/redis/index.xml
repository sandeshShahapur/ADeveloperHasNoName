<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Redis on ADeveloperHasNoName</title>
    <link>http://localhost:1313/tags/redis/</link>
    <description>Recent content in Redis on ADeveloperHasNoName</description>
    <generator>Hugo -- 0.135.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Nov 2024 15:48:09 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SAFA</title>
      <link>http://localhost:1313/projects/safa/</link>
      <pubDate>Wed, 20 Nov 2024 11:35:30 +0530</pubDate>
      <guid>http://localhost:1313/projects/safa/</guid>
      <description>SAFA is a web platform for FIFA eSports tournaments, transitioning from a Discord bot to a full-fledged web interface with features like team management, stats tracking, and user authentication through Discord.</description>
    </item>
    <item>
      <title>Overcoming Concurrent Refresh Attempts of Access Tokens (JWT)</title>
      <link>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</link>
      <pubDate>Wed, 09 Oct 2024 10:04:58 +0530</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-concurrent-refresh-attempts-of-access-tokens-jwt/</guid>
      <description>A deep dive into handling concurrent refresh attempts of access tokens in a single-page application using JWT, OAuth, and Redis-based locking mechanisms to enhance token management security.</description>
    </item>
    <item>
      <title>Overcoming (discord) API Rate Limits With Redis Cache</title>
      <link>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/overcoming-discord-api-rate-limits-with-redis-cache/</guid>
      <description>How to handle (Discord) API rate limits using a Redis-based caching mechanism in a web application.</description>
    </item>
  </channel>
</rss>
